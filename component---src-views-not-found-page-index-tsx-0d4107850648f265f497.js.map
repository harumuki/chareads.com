{"version":3,"sources":["webpack:///./src/components/H/index.ts","webpack:///./src/components/cards/BookCard/index.tsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/utils/graphql/normalize.ts","webpack:///./src/views/NotFoundPage/index.tsx"],"names":["sizeMultiplier","decorative","H","styled","h1","size","FONT","FAMILY","DECORATIVE","WEIGHT","REGULAR","BODY","parseFloat","SIZE","screenMax","m","StyledBookCard","big","props","COLOR","BACKGROUND_DARK","BORDER_RADIUS","S","screenMin","StyledImgWrapper","figure","BACKGROUND_LIGHT","StyledImg","Img","StyledAccessibilityTitle","figcaption","StyledMeta","div","XS","StyledVideoLink","button","BOLD","BookCard","book","featured","hideDetails","className","to","slug","style","background","image","colors","darkVibrant","lightMuted","color","vibrant","muted","bookHeight","toFixed","title","author","fixed","childImageSharp","h150","media","BREAKPOINT","h350","backgroundColor","rating7","video","onClick","e","preventDefault","navigate","of7","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","normalizeArray","query","edges","map","node","StyledBook","GridItem","NotFoundPage","bookData","data","location","books","navOpenOnDesktop","navTitle","href","marginTop","id","span","spanFromM","spanFromL","spanRowsFromM","as"],"mappings":"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","file":"component---src-views-not-found-page-index-tsx-0d4107850648f265f497.js","sourcesContent":["import styled, { SimpleInterpolation } from 'styled-components'\nimport { FONT } from 'styles/tokens'\nimport { screenMax } from 'styles/responsive'\n\ntype HSize = 'XXL' | 'XL' | 'L' | 'M' | 'S'\n\ninterface HProps {\n  size: HSize\n  decorative?: boolean\n}\n\nconst sizeMultiplier = (decorative): number => (decorative ? 1.5 : 1)\n\nconst H = styled.h1<HProps>`\n  ${({ decorative, size }): string => `\n    ${\n      decorative\n        ? `\n      font-family: ${FONT.FAMILY.DECORATIVE};\n      font-weight: ${FONT.WEIGHT.REGULAR};\n      line-height: 0.8;\n    `\n        : `\n      font-family: ${FONT.FAMILY.BODY};\n      line-height: 1.25;\n    `\n    }\n\n    font-size: ${parseFloat(FONT.SIZE[size]) * sizeMultiplier(decorative)}em;\n  `}\n\n  ${({ decorative, size }): SimpleInterpolation =>\n    (size as string) === 'XXL' &&\n    screenMax.m`\n    font-size: ${(parseFloat(FONT.SIZE[size]) * sizeMultiplier(decorative)) /\n      1.25}em;\n  `}\n`\n\nexport default H\n","import React from 'react'\nimport styled, { SimpleInterpolation } from 'styled-components'\nimport { Link, navigate } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { BookCardType } from 'types/book'\nimport StarRating from 'components/StarRating'\nimport ArrowIcon from 'components/icons/ArrowIcon'\nimport { FONT, COLOR, BORDER_RADIUS, BREAKPOINT } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\n\ninterface BookCardProps {\n  big: boolean\n}\n\nconst StyledBookCard = styled(\n  ({ big, ...props }) => <Link {...props} /> // eslint-disable-line\n)<BookCardProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  margin: 0;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n  outline: 0 !important;\n  --perspective: 800px;\n  --book-pages-color: #afbdbb;\n\n  ${({ big }): SimpleInterpolation =>\n    big &&\n    screenMin.m`\n    --perspective: 1600px;\n  `};\n`\n\nconst StyledImgWrapper = styled.figure`\n  max-width: 100%;\n  height: auto;\n  margin: 0.5em;\n  background: var(--book-pages-color);\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n  transform: scale(var(--book-scale));\n\n  *::selection {\n    background: var(--primary-color);\n    color: ${COLOR.BACKGROUND_LIGHT};\n  }\n`\n\nconst StyledImg = styled(Img)`\n  vertical-align: bottom;\n  transition: transform 0.3s ease-out;\n  transform-origin: 0 50%;\n  box-shadow: 0 0 0.3em rgba(0, 0, 0, 0.05);\n  transform: perspective(var(--perspective)) rotateY(0);\n\n  a:hover &,\n  a:focus & {\n    transition: transform 0.15s ease-out;\n    transform: perspective(var(--perspective)) rotateY(-30deg);\n  }\n\n  a:active & {\n    transition: transform 0.5s ease-out;\n    transform: perspective(var(--perspective)) rotateY(-80deg);\n  }\n`\n\nconst StyledAccessibilityTitle = styled.figcaption`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: ${FONT.SIZE.S};\n  color: transparent;\n  padding: 0.5em;\n  display: flex;\n  place-items: center;\n`\n\nconst StyledMeta = styled.div`\n  margin: 0 0 1em;\n  font-size: ${FONT.SIZE.XS};\n  line-height: 1;\n  text-align: center;\n\n  & > * + * {\n    margin-top: 0.25em;\n  }\n`\n\nconst StyledVideoLink = styled.button`\n  display: inline-block;\n  font-weight: ${FONT.WEIGHT.BOLD};\n  padding: 0.25em 0.5em;\n  transition: transform 150ms linear;\n\n  &:hover {\n    transform: translate(-0.1em, 0);\n  }\n\n  &::selection {\n    background: transparent;\n  }\n`\n\ninterface Props {\n  book: BookCardType\n  featured?: boolean\n  big?: boolean\n  hideDetails?: boolean\n  className?: string\n}\n\nconst BookCard: React.FC<Props> = ({\n  book,\n  featured,\n  big,\n  hideDetails,\n  className,\n}) => {\n  return (\n    <StyledBookCard\n      to={book.slug}\n      big={big}\n      style={\n        {\n          background: hideDetails\n            ? book.image.colors.darkVibrant\n            : featured && book.image.colors.lightMuted,\n          color: book.image.colors.darkVibrant,\n          '--primary-color': book.image.colors.vibrant,\n          '--secondary-color': book.image.colors.darkVibrant,\n          '--book-pages-color': featured && book.image.colors.muted,\n          '--book-scale': ((book.bookHeight || 198) / 220).toFixed(2),\n        } as object\n      }\n      className={className}\n      title={`${book.title} by ${book.author}`}\n    >\n      <StyledImgWrapper>\n        <StyledImg\n          fixed={\n            big\n              ? [\n                  {\n                    ...book.image.childImageSharp.h150,\n                    media: `(max-width: ${BREAKPOINT.S - 1}px)`,\n                  },\n                  {\n                    ...book.image.childImageSharp.h350,\n                    media: `(min-width: ${BREAKPOINT.S}px)`,\n                  },\n                ]\n              : book.image.childImageSharp.h150\n          }\n          backgroundColor={book.image.colors.muted}\n        />\n        <StyledAccessibilityTitle>\n          <span>\n            {book.title} by {book.author}\n          </span>\n        </StyledAccessibilityTitle>\n      </StyledImgWrapper>\n      {!hideDetails && (book.rating7 || book.video) && (\n        <StyledMeta>\n          {book.video && (\n            <StyledVideoLink\n              onClick={(e): void => {\n                e.preventDefault()\n                navigate(book.video.slug)\n              }}\n            >\n              Video review\n              <ArrowIcon />\n            </StyledVideoLink>\n          )}\n          {book.rating7 && <StarRating of7={book.rating7} />}\n        </StyledMeta>\n      )}\n    </StyledBookCard>\n  )\n}\n\nexport default BookCard\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","interface Query {\n  edges: {\n    node: object\n  }[]\n}\n\nexport const normalizeArray = (query: Query): object[] =>\n  query.edges.map((query) => query.node)\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { PageProps } from 'types/page'\nimport { BookCardType } from 'types/book'\nimport Layout from 'Layout'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Wrapper from 'components/Wrapper'\nimport H from 'components/H'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport BookCard from 'components/cards/BookCard'\nimport { FONT } from 'styles/tokens'\n\nconst StyledBook = styled(GridItem)`\n  list-style: none;\n  font-size: ${FONT.SIZE.S};\n`\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: BookCardType\n      }[]\n    }\n  }\n}\n\nconst NotFoundPage: React.FC<Props> = ({ data: { bookData }, location }) => {\n  const books = normalizeArray(bookData) as BookCardType[]\n\n  return (\n    <Layout location={location} navOpenOnDesktop navTitle=\"404\" title=\"404\">\n      <Wrapper>\n        <H size=\"XXL\" decorative>\n          Page not found\n        </H>\n        <p>\n          Do you think this page is supposed to be here? Tweet me {}\n          <a href=\"https://twitter.com/charlotte_dann\">@charlotte_dann</a> and\n          I&rsquo;ll look into it.\n        </p>\n      </Wrapper>\n      <Grid style={{ marginTop: '2em' }}>\n        <GridItem>\n          <H size=\"M\">Check out some recent book reviews:</H>\n        </GridItem>\n        {books.map(\n          (book: BookCardType): React.ReactNode => (\n            <StyledBook\n              key={book.id}\n              span={1}\n              spanFromM={3}\n              spanFromL={2}\n              spanRowsFromM={1}\n              as=\"li\"\n            >\n              <BookCard book={book} />\n            </StyledBook>\n          )\n        )}\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query NotFoundPage {\n    bookData: allBook(\n      limit: 12\n      filter: { dateReviewed: { ne: null } }\n      sort: { fields: dateReviewed, order: DESC }\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default NotFoundPage\n"],"sourceRoot":""}