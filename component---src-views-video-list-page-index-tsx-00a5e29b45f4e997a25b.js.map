{"version":3,"sources":["webpack:///./src/views/VideoListPage/index.tsx","webpack:///./src/utils/hooks/useScrollPosition.ts","webpack:///./src/components/InfiniteScroll/index.tsx","webpack:///./src/components/cards/VideoCard/index.tsx"],"names":["query","VideoListPage","videoData","data","location","videos","normalizeArray","as","size","decorative","length","full","items","renderItem","video","key","id","span","spanFromM","featured","spanFromL","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","isBrowser","useScrollPosition","effect","wait","deps","element","throttleTimeout","callback","current","document","body","getBoundingClientRect","bottom","innerHeight","getScrollPosition","handleScroll","setTimeout","addEventListener","removeEventListener","InfiniteScroll","anchorRef","createRef","useState","itemsToShow","setItemsToShow","pos","slice","map","ref","StyledVideoCard","styled","Link","COLOR","BACKGROUND_DARK","BORDER_RADIUS","S","StyledImg","Img","StyledDetails","div","StyledTimestamp","p","FONT","SIZE","StyledMeta","XS","StyledDatePublished","time","StyledH","H","StyledBookContentsWrapper","isStars","VideoCard","timestamp","featuredBookCount","timestamps","filter","t","book","to","slug","style","background","image","colors","lightVibrant","color","darkMuted","vibrant","childImageSharp","fluid","src","muted","title","ownedBy","frontmatter","rating7","of7","shortFormatDate","datePublished","formatViewCount","viewCount"],"mappings":"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","file":"component---src-views-video-list-page-index-tsx-00a5e29b45f4e997a25b.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { PageProps } from 'types/page'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { RawVideoCard, VideoCardType } from 'types/video/card'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport VideoCard from 'components/cards/VideoCard'\nimport H from 'components/H'\nimport TextIntro from 'components/Wrapper/TextIntro'\nimport InfiniteScroll from 'components/InfiniteScroll'\n\ninterface Props extends PageProps {\n  data: {\n    videoData: {\n      edges: {\n        node: RawVideoCard\n      }[]\n    }\n  }\n}\n\nconst VideoListPage: React.FC<Props> = ({ data: { videoData }, location }) => {\n  const videos = normalizeArray(videoData) as VideoCardType[]\n\n  return (\n    <Layout location={location}>\n      <TextIntro>\n        <H as=\"h1\" size=\"XXL\" decorative>\n          Videos\n        </H>\n        <p>\n          {videos.length} bookish videos, starting way back in February 2014!\n        </p>\n      </TextIntro>\n\n      <Grid as=\"ol\" full>\n        <InfiniteScroll\n          items={videos}\n          renderItem={(video: VideoCardType): React.ReactNode => (\n            <GridItem\n              as=\"li\"\n              key={video.id}\n              span={1}\n              spanFromM={video.featured ? 6 : 3}\n              spanFromL={video.featured ? 4 : 2}\n            >\n              <VideoCard video={video} featured={video.featured} />\n            </GridItem>\n          )}\n        />\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query VideoListPage {\n    videoData: allVideos(sort: { fields: datePublished, order: DESC }) {\n      edges {\n        node {\n          ...VideoCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default VideoListPage\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\nconst isBrowser = typeof window !== `undefined`\n\nconst getScrollPosition = (\n  element: React.RefObject<React.ReactNode>\n): number => {\n  if (!isBrowser) return 0\n\n  const target = element.current || document.body\n  return target.getBoundingClientRect().bottom - window.innerHeight\n}\n\nconst useScrollPosition = (\n  effect: (pos: number) => void,\n  wait: number,\n  deps: any[], // eslint-disable-line\n  element?: React.RefObject<React.ReactNode>\n): void => {\n  let throttleTimeout = null\n\n  const callback = (): void => {\n    effect(getScrollPosition(element))\n    throttleTimeout = null\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return\n    }\n\n    const handleScroll = (): void => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callback, wait)\n        }\n      } else {\n        callback()\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return (): void => window.removeEventListener('scroll', handleScroll)\n  }, deps || [])\n}\n\nexport default useScrollPosition\n","import React, { useState, createRef } from 'react'\n\nimport useScrollPosition from 'utils/hooks/useScrollPosition'\n\nconst SCROLL_BUFFER = 300\nconst INITIAL_COUNT = 16\nconst INCREMENT = 8\n\nconst isBrowser = typeof window !== `undefined`\n\ninterface Props {\n  items: object[]\n  renderItem: (item: object) => React.ReactNode\n}\n\nconst InfiniteScroll: React.FC<Props> = ({ items, renderItem }) => {\n  const anchorRef = createRef()\n  const [itemsToShow, setItemsToShow] = useState(INITIAL_COUNT)\n\n  useScrollPosition(\n    (pos) => {\n      if (pos < 400 && itemsToShow < items.length)\n        setItemsToShow(itemsToShow + INCREMENT)\n    },\n    SCROLL_BUFFER,\n    [itemsToShow],\n    anchorRef\n  )\n\n  return (\n    <>\n      {items.slice(0, isBrowser ? itemsToShow : items.length).map(renderItem)}\n      <span ref={anchorRef as React.LegacyRef<HTMLSpanElement>} />\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { VideoCardType } from 'types/video/card'\nimport { shortFormatDate } from 'utils/formatting/time'\nimport { formatViewCount } from 'utils/formatting/numbers'\nimport H from 'components/H'\nimport { COLOR, FONT, BORDER_RADIUS } from 'styles/tokens'\nimport StarRating from 'components/StarRating'\n\nconst StyledVideoCard = styled(Link)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n`\n\nconst StyledImg = styled(Img)`\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n`\n\nconst StyledDetails = styled.div`\n  padding: 0.5em 0.5em 0.3em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 4.8em;\n`\n\nconst StyledTimestamp = styled.p`\n  font-size: ${FONT.SIZE.S};\n  margin: 0;\n`\n\nconst StyledMeta = styled.p`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap-reverse;\n  font-size: ${FONT.SIZE.XS};\n  margin: 0;\n  opacity: 0.5;\n`\n\nconst StyledDatePublished = styled.time`\n  margin-right: 0.5em;\n`\n\nconst StyledH = styled(H)`\n  margin: 0;\n`\n\ninterface BookContentsProps {\n  isStars: boolean\n}\n\nconst StyledBookContentsWrapper = styled.div<BookContentsProps>`\n  font-size: ${({ isStars }): string => (isStars ? FONT.SIZE.S : FONT.SIZE.XS)};\n  margin: ${({ isStars }): number => (isStars ? 0.4 : 0.2)}em 0;\n  opacity: 0.75;\n`\n\ninterface Props {\n  video: VideoCardType\n  featured?: boolean\n  timestamp?: string\n}\n\nconst VideoCard: React.FC<Props> = ({ video, featured, timestamp }) => {\n  const featuredBookCount = (video.timestamps || []).filter(\n    (t) => t.book && t.book.id\n  ).length\n\n  return (\n    <StyledVideoCard\n      to={timestamp ? `${video.slug}?at=${timestamp}` : video.slug}\n      style={\n        {\n          background: featured && video.image.colors.lightVibrant,\n          color: featured && video.image.colors.darkMuted,\n          '--primary-color': video.image.colors.vibrant,\n        } as object\n      }\n    >\n      <StyledImg\n        key={video.image.childImageSharp.fluid.src}\n        fluid={video.image.childImageSharp.fluid}\n        style={{ background: video.image.colors.muted }}\n      />\n      <StyledDetails>\n        <div>\n          {timestamp && (\n            <StyledTimestamp>Featured at {timestamp} in</StyledTimestamp>\n          )}\n          <StyledH as=\"h2\" size=\"S\">\n            {video.title}\n          </StyledH>\n\n          <StyledBookContentsWrapper isStars={!!video.ownedBy}>\n            {video.ownedBy\n              ? video.ownedBy.frontmatter.rating7 && (\n                  <StarRating of7={video.ownedBy.frontmatter.rating7} />\n                )\n              : !timestamp &&\n                featuredBookCount > 0 && (\n                  <>\n                    Featuring {featuredBookCount} book\n                    {featuredBookCount > 1 && 's'}\n                  </>\n                )}\n          </StyledBookContentsWrapper>\n        </div>\n        <StyledMeta>\n          <StyledDatePublished>\n            {shortFormatDate(video.datePublished)}\n          </StyledDatePublished>\n          <div>{formatViewCount(video.viewCount)}</div>\n        </StyledMeta>\n      </StyledDetails>\n    </StyledVideoCard>\n  )\n}\n\nexport default VideoCard\n"],"sourceRoot":""}