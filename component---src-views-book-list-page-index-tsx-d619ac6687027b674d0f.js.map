{"version":3,"sources":["webpack:///./src/components/cards/BookCard/index.tsx","webpack:///./src/views/BookListPage/index.tsx"],"names":["BookCard","book","to","slug","style","display","width","margin","verticalAlign","key","image","childImageSharp","fluid","src","as","decorative","size","title","author","dateReviewed","shortFormatDate","of7","rating7","query","BookListPage","bookData","data","books","normalizeArray","length","map","id"],"mappings":"6FAAA,8FAyCeA,IA5BmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACnC,OACE,kBAAC,IAAD,CACEC,GAAID,EAAKE,KACTC,MAAO,CACLC,QAAS,eACTC,MAAO,IACPC,OAAQ,EACRC,cAAe,QAGjB,kBAAC,IAAD,CACEC,IAAKR,EAAKS,MAAMC,gBAAgBC,MAAMC,IACtCD,MAAOX,EAAKS,MAAMC,gBAAgBC,QAEpC,kBAAC,IAAD,CAAGE,GAAG,KAAKC,YAAY,EAAOC,KAAK,KAChCf,EAAKgB,MADR,OACmBhB,EAAKiB,QAEvBjB,EAAKkB,cACJ,2BACE,8BAAOC,YAAgBnB,EAAKkB,gBAGhC,kBAAC,IAAD,CAAYE,IAAKpB,EAAKqB,a,kCCpC5B,0GAkCaC,EAAQ,aAcNC,UA9BuB,SAAC,GAA2B,IAAjBC,EAAiB,EAAzBC,KAAQD,SACzCE,EAAQC,YAAeH,GAE7B,OACE,kBAAC,IAAD,KACGE,EAAME,QACL,4BACGF,EAAMG,KAAI,SAAC7B,GAAD,OACT,kBAAC,IAAD,CAAUQ,IAAKR,EAAK8B,GAAI9B,KAAMA","file":"component---src-views-book-list-page-index-tsx-d619ac6687027b674d0f.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { BookCardType } from 'types/book/card'\nimport { shortFormatDate } from 'utils/formatting/time'\nimport StarRating from 'components/StarRating'\nimport H from 'components/H'\n\ninterface Props {\n  book: BookCardType\n}\n\nconst BookCard: React.FC<Props> = ({ book }) => {\n  return (\n    <Link\n      to={book.slug}\n      style={{\n        display: 'inline-block',\n        width: 200,\n        margin: 0,\n        verticalAlign: 'top',\n      }}\n    >\n      <Img\n        key={book.image.childImageSharp.fluid.src}\n        fluid={book.image.childImageSharp.fluid}\n      />\n      <H as=\"h2\" decorative={false} size=\"M\">\n        {book.title} by {book.author}\n      </H>\n      {book.dateReviewed && (\n        <p>\n          <time>{shortFormatDate(book.dateReviewed)}</time>\n        </p>\n      )}\n      <StarRating of7={book.rating7} />\n    </Link>\n  )\n}\n\nexport default BookCard\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { RawBookCard, BookCardType } from 'types/book/card'\nimport BookCard from 'components/cards/BookCard'\n\ninterface Props {\n  data: {\n    bookData: {\n      edges: {\n        node: RawBookCard\n      }[]\n    }\n  }\n}\n\nconst BookListPage: React.FC<Props> = ({ data: { bookData } }) => {\n  const books = normalizeArray(bookData) as BookCardType[]\n\n  return (\n    <Layout>\n      {books.length && (\n        <ol>\n          {books.map((book) => (\n            <BookCard key={book.id} book={book} />\n          ))}\n        </ol>\n      )}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BookListPage {\n    bookData: allMarkdownRemark(\n      sort: { fields: frontmatter___dateReviewed, order: DESC }\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default BookListPage\n"],"sourceRoot":""}