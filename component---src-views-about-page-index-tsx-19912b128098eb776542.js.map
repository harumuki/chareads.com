{"version":3,"sources":["webpack:///./src/views/AboutPage/index.tsx"],"names":["StyledBook","styled","GridItem","FONT","SIZE","S","screenMin","l","StyledImg","Img","BORDER_RADIUS","m","StyledLinksList","ul","query","AboutPage","data","bookData","portrait","location","books","normalizeArray","navOpenOnDesktop","navTitle","span","spanFromM","spanFromL","href","columnsFromL","alt","fluid","childImageSharp","backgroundColor","colors","vibrant","as","size","map","book","key","id","spanRowsFromM","featured"],"mappings":"+8BAmBA,IAAMA,EAAaC,YAAOC,IAAPD,CAAH,IAEDE,IAAKC,KAAKC,EAErBC,IAAUC,EAJE,MAWVC,EAAYP,YAAOQ,IAAPR,CAAH,IACIS,IAAcL,EAE7BC,IAAUK,EAHC,MAQTC,EAAkBX,IAAOY,GAAV,IACNV,IAAKC,KAAKC,GAwHZS,EAAQ,aAqCNC,UAtIoB,SAAC,GAG9B,QAFJC,KAAQC,EAEJ,EAFIA,SAAUC,EAEd,EAFcA,SAClBC,EACI,EADJA,SAEMC,EAAQC,YAAeJ,GAE7B,OACE,kBAAC,IAAD,CAAQE,SAAUA,EAAUG,kBAAgB,EAACC,SAAS,kBACpD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,KAAM,EAAGC,UAAW,EAAGC,UAAW,GAC1C,2BACE,mDADF,qFAIA,uMAKA,wIAE0C,yCAF1C,wDAIE,uBAAGC,KAAK,gCAAR,kBAJF,+DAOA,wNAKA,6GAEc,uBAAGA,KAAK,oBAAR,aAFd,4DAMF,kBAAC,IAAD,CAAUH,KAAM,EAAGC,UAAW,EAAGG,aAAa,UAC5C,kBAACpB,EAAD,CACEqB,IAAI,0BACJC,MAAOZ,EAASa,gBAAgBD,MAChCE,gBAAiBd,EAASe,OAAOC,UAGnC,kBAACtB,EAAD,KACE,4BACE,kBAAC,IAAD,CAAMuB,GAAG,IAAIR,KAAK,0CAAlB,wBAEE,kBAAC,IAAD,QAGJ,4BACE,kBAAC,IAAD,CACEQ,GAAG,IACHR,KAAK,8DAFP,0BAKE,kBAAC,IAAD,QAGJ,4BACE,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,KAAK,oCAAlB,oCAEE,kBAAC,IAAD,QAGJ,4BACE,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,KAAK,iDAAlB,iCAEE,kBAAC,IAAD,UAMR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAGS,KAAK,KAAR,wCAEDhB,EAAMiB,KACL,SAACC,GAAD,OACE,kBAACtC,EAAD,CACEuC,IAAKD,EAAKE,GACVhB,KAAM,EACNC,UAAW,EACXC,UAAW,EACXe,cAAe,EACfN,GAAG,MAEH,kBAAC,IAAD,CAAUG,KAAMA,EAAMI,UAAQ","file":"component---src-views-about-page-index-tsx-19912b128098eb776542.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nimport Layout from 'Layout'\nimport { PageProps } from 'types/page'\nimport { BookCardType } from 'types/book'\nimport { GatsbyImageSharpFluid } from 'types/image'\nimport H from 'components/H'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport BookCard from 'components/cards/BookCard'\nimport ArrowIcon from 'components/icons/ArrowIcon'\nimport Link from 'components/links/Link'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport { FONT, BORDER_RADIUS } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\n\nconst StyledBook = styled(GridItem)`\n  list-style: none;\n  font-size: ${FONT.SIZE.S};\n\n  ${screenMin.l`\n    &:nth-of-type(n + 7) {\n      display: none;\n    }\n  `}\n`\n\nconst StyledImg = styled(Img)`\n  border-radius: ${BORDER_RADIUS.S};\n\n  ${screenMin.m`\n    margin-top: 1.25em;\n  `}\n`\n\nconst StyledLinksList = styled.ul`\n  font-size: ${FONT.SIZE.S};\n  line-height: 1.25;\n\n  > * {\n    margin-bottom: 0.5em;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: BookCardType\n      }[]\n    }\n    portrait: GatsbyImageSharpFluid\n  }\n}\n\nconst AboutPage: React.FC<Props> = ({\n  data: { bookData, portrait },\n  location,\n}) => {\n  const books = normalizeArray(bookData) as BookCardType[]\n\n  return (\n    <Layout location={location} navOpenOnDesktop navTitle=\"About Chareads\">\n      <Grid>\n        <GridItem span={2} spanFromM={8} spanFromL={7}>\n          <p>\n            <em>Welcome to Chareads</em>, the online hub that brings together my\n            book reviews and bookish YouTube videos.\n          </p>\n          <p>\n            Contrary to most bookish people, I hated reading as a child. Apart\n            from Twilight and the occasional book for English Lit, you would not\n            find me within 6 feet of a book.\n          </p>\n          <p>\n            When I discovered the joy of reading aged 20, I learned so much I\n            decided I wanted to share that joy with <em>everybody</em>, so I\n            made a YouTube channel called Chareadzard (in {}\n            <a href=\"https://youtu.be/TH0kjnCYQM4\">my first video</a> I stated I\n            would never regret naming it that&mdash;I was wrong).\n          </p>\n          <p>\n            Six years later, Chareadzard has evolved into Chareads, and I now\n            make a monthly wrap-up video of all the books Iâ€™ve read in a month,\n            and individual in-depth reviews for specific books.\n          </p>\n          <p>\n            I hope you can find your new favourite book here, and feel free to\n            email me at <a href=\"mailto:hi@cha.rs\">hi@cha.rs</a> if you have any\n            questions or suggestions for the site.\n          </p>\n        </GridItem>\n        <GridItem span={2} spanFromM={4} columnsFromL=\"9 / 13\">\n          <StyledImg\n            alt=\"Photo of Charlotte Dann\"\n            fluid={portrait.childImageSharp.fluid}\n            backgroundColor={portrait.colors.vibrant}\n          />\n\n          <StyledLinksList>\n            <li>\n              <Link as=\"a\" href=\"https://www.twitter.com/charlotte_dann\">\n                Follow me on Twitter&nbsp;\n                <ArrowIcon />\n              </Link>\n            </li>\n            <li>\n              <Link\n                as=\"a\"\n                href=\"https://www.goodreads.com/user/show/5008298-charlotte-dann\"\n              >\n                Follow me on Goodreads&nbsp;\n                <ArrowIcon />\n              </Link>\n            </li>\n            <li>\n              <Link as=\"a\" href=\"https://www.youtube.com/chareads\">\n                Subscribe to Chareads on YouTube&nbsp;\n                <ArrowIcon />\n              </Link>\n            </li>\n            <li>\n              <Link as=\"a\" href=\"https://github.com/pouretrebelle/chareads.com\">\n                Website source code on GitHub&nbsp;\n                <ArrowIcon />\n              </Link>\n            </li>\n          </StyledLinksList>\n        </GridItem>\n\n        <GridItem>\n          <H size=\"M\">A couple of faves to get you going:</H>\n        </GridItem>\n        {books.map(\n          (book: BookCardType): React.ReactNode => (\n            <StyledBook\n              key={book.id}\n              span={1}\n              spanFromM={3}\n              spanFromL={2}\n              spanRowsFromM={1}\n              as=\"li\"\n            >\n              <BookCard book={book} featured />\n            </StyledBook>\n          )\n        )}\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query AboutPage {\n    portrait: file(relativePath: { eq: \"portrait.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 340) {\n          ...GatsbyImageSharpFluid_noBase64\n        }\n      }\n      colors {\n        ...GatsbyImageColors\n      }\n    }\n    bookData: allBook(\n      filter: {\n        title: {\n          in: [\n            \"Wild\"\n            \"The Secret History\"\n            \"The Moonstone\"\n            \"My Year of Rest and Relaxation\"\n            \"The Name of the Wind\"\n            \"The Distance of the Moon\"\n            \"When Breath Becomes Air\"\n            \"Eat Up\"\n          ]\n        }\n      }\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default AboutPage\n"],"sourceRoot":""}