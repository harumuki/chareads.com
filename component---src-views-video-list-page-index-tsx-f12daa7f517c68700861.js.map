{"version":3,"sources":["webpack:///./src/views/VideoListPage/index.tsx"],"names":["query","VideoListPage","videoData","data","videos","normalizeArray","as","length","map","video","key","id","span","spanFromM","featured"],"mappings":"6FAAA,kIAqCaA,EAAQ,YAYNC,UA7BwB,SAAC,GAA4B,IAAlBC,EAAkB,EAA1BC,KAAQD,UAC1CE,EAASC,YAAeH,GAE9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMI,GAAG,MACNF,EAAOG,QACNH,EAAOI,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAUH,GAAG,KAAKI,IAAKD,EAAME,GAAIC,KAAM,EAAGC,UAAW,GACnD,kBAAC,IAAD,CAAWJ,MAAOA,EAAOK,SAAUL,EAAMK","file":"component---src-views-video-list-page-index-tsx-f12daa7f517c68700861.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { RawVideoCard, VideoCardType } from 'types/video/card'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport VideoCard from 'components/cards/VideoCard'\n\ninterface Props {\n  data: {\n    videoData: {\n      edges: {\n        node: RawVideoCard\n      }[]\n    }\n  }\n}\n\nconst VideoListPage: React.FC<Props> = ({ data: { videoData } }) => {\n  const videos = normalizeArray(videoData) as VideoCardType[]\n\n  return (\n    <Layout>\n      <Grid as=\"ol\">\n        {videos.length &&\n          videos.map((video) => (\n            <GridItem as=\"li\" key={video.id} span={1} spanFromM={3}>\n              <VideoCard video={video} featured={video.featured} />\n            </GridItem>\n          ))}\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query VideoListPage {\n    videoData: allVideos(sort: { fields: datePublished, order: DESC }) {\n      edges {\n        node {\n          ...VideoCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default VideoListPage\n"],"sourceRoot":""}