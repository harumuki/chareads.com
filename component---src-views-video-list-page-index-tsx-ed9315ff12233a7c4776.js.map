{"version":3,"sources":["webpack:///./src/views/VideoListPage/index.tsx","webpack:///./src/utils/hooks/useIsomorphicLayoutEffect.ts","webpack:///./src/utils/hooks/useScrollPosition.ts","webpack:///./src/components/InfiniteScroll/index.tsx","webpack:///./src/components/icons/PlayIcon.tsx","webpack:///./src/components/cards/VideoCard/index.tsx"],"names":["query","VideoListPage","videoData","data","location","videos","normalizeArray","navOpenOnDesktop","navTitle","title","as","full","items","renderItem","video","key","id","span","spanFromM","featured","spanFromL","big","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","isBrowser","useScrollPosition","effect","wait","deps","element","throttleTimeout","callback","current","document","body","getBoundingClientRect","bottom","innerHeight","getScrollPosition","handleScroll","setTimeout","addEventListener","removeEventListener","InfiniteScroll","anchorRef","createRef","useState","itemsToShow","setItemsToShow","length","pos","slice","map","ref","PlayIcon","className","viewBox","d","YouTubePlayerConfig","youtube","playerVars","rel","controls","autoplay","StyledVideoCard","styled","Link","COLOR","BACKGROUND_DARK","BORDER_RADIUS","S","StyledPlayButton","button","StyledPlayIcon","BACKGROUND_LIGHT","StyledImg","Img","StyledDetails","div","StyledTimestamp","p","FONT","SIZE","StyledMeta","XS","StyledDatePublished","time","StyledH","H","StyledBookContentsWrapper","isStars","XXS","VideoCard","timestamp","playsInline","hideOwnedByRating","playVideo","setPlayVideo","featuredBookCount","timestamps","filter","t","book","ownedBy","to","slug","style","background","image","colors","lightVibrant","color","darkMuted","vibrant","AspectRatioWrapper","backgroundColor","muted","url","youtubeId","unformatTimestamp","config","width","height","onClick","e","preventDefault","fluid","childImageSharp","w200","media","BREAKPOINT","M","w350","size","rating7","StarRating","of7","shortFormatDate","datePublished","viewCount","parseInt","process","formatViewCount"],"mappings":"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","file":"component---src-views-video-list-page-index-tsx-ed9315ff12233a7c4776.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { PageProps } from 'types/page'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { VideoCardType } from 'types/video'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport VideoCard from 'components/cards/VideoCard'\nimport InfiniteScroll from 'components/InfiniteScroll'\n\ninterface Props extends PageProps {\n  data: {\n    videoData: {\n      edges: {\n        node: VideoCardType\n      }[]\n    }\n  }\n}\n\nconst VideoListPage: React.FC<Props> = ({ data: { videoData }, location }) => {\n  const videos = normalizeArray(videoData) as VideoCardType[]\n\n  return (\n    <Layout\n      location={location}\n      navOpenOnDesktop\n      navTitle=\"Bookish videos\"\n      title=\"Videos\"\n    >\n      <Grid as=\"ol\" full>\n        <InfiniteScroll\n          items={videos}\n          renderItem={(video: VideoCardType): React.ReactNode => (\n            <GridItem\n              as=\"li\"\n              key={video.id}\n              span={1}\n              spanFromM={video.featured ? 6 : 3}\n              spanFromL={video.featured ? 4 : 2}\n            >\n              <VideoCard\n                video={video}\n                featured={video.featured}\n                big={video.featured}\n              />\n            </GridItem>\n          )}\n        />\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query VideoListPage {\n    videoData: allVideo(sort: { fields: datePublished, order: DESC }) {\n      edges {\n        node {\n          ...VideoCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default VideoListPage\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst isBrowser = typeof window !== `undefined`\n\nconst getScrollPosition = (\n  element: React.RefObject<React.ReactNode>\n): number => {\n  if (!isBrowser) return 0\n\n  const target = (element.current || document.body) as HTMLElement\n  return target.getBoundingClientRect().bottom - window.innerHeight\n}\n\nconst useScrollPosition = (\n  effect: (pos: number) => void,\n  wait: number,\n  deps: any[], // eslint-disable-line\n  element?: React.RefObject<React.ReactNode>\n): void => {\n  let throttleTimeout = null\n\n  const callback = (): void => {\n    effect(getScrollPosition(element))\n    throttleTimeout = null\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return\n    }\n\n    const handleScroll = (): void => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callback, wait)\n        }\n      } else {\n        callback()\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return (): void => window.removeEventListener('scroll', handleScroll)\n  }, deps || [])\n}\n\nexport default useScrollPosition\n","import React, { useState, useLayoutEffect, createRef } from 'react'\n\nimport useScrollPosition from 'utils/hooks/useScrollPosition'\n\nconst SCROLL_BUFFER = 300\nconst INITIAL_COUNT = 24\nconst INCREMENT = 8\n\nconst isBrowser = typeof window !== `undefined`\n\ninterface Props {\n  items: object[]\n  renderItem: (item: object) => React.ReactNode\n}\n\nconst InfiniteScroll: React.FC<Props> = ({ items, renderItem }) => {\n  const anchorRef = createRef()\n  const [itemsToShow, setItemsToShow] = useState(INITIAL_COUNT)\n\n  useLayoutEffect(() => {\n    setItemsToShow(INITIAL_COUNT)\n  }, [items.length])\n\n  useScrollPosition(\n    (pos) => {\n      if (pos < 400 && itemsToShow < items.length)\n        setItemsToShow(itemsToShow + INCREMENT)\n    },\n    SCROLL_BUFFER,\n    [itemsToShow, items.length],\n    anchorRef\n  )\n\n  return (\n    <>\n      {items.slice(0, isBrowser ? itemsToShow : items.length).map(renderItem)}\n      <span ref={anchorRef as React.LegacyRef<HTMLSpanElement>} />\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nconst PlayIcon: React.FC<Props> = ({ className }) => (\n  <svg viewBox=\"0 0 11 14\" className={className}>\n    <path d=\"M9.2,6.2l-7.5-5c-0.5-0.3-1.2,0-1.2,0.6v10.3c0,0.6,0.7,1,1.2,0.6l7.5-5C9.8,7.4,9.8,6.6,9.2,6.2z\" />\n  </svg>\n)\n\nexport default PlayIcon\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport YouTubePlayer from 'react-player/lib/players/YouTube'\n\nimport { VideoCardType } from 'types/video'\nimport { shortFormatDate, unformatTimestamp } from 'utils/formatting/time'\nimport { formatViewCount } from 'utils/formatting/numbers'\nimport H from 'components/H'\nimport { COLOR, FONT, BORDER_RADIUS, BREAKPOINT } from 'styles/tokens'\nimport StarRating from 'components/StarRating'\nimport AspectRatioWrapper from 'components/AspectRatioWrapper'\nimport PlayIcon from 'components/icons/PlayIcon'\n\nconst YouTubePlayerConfig = {\n  youtube: {\n    playerVars: {\n      rel: 0,\n      controls: 1,\n      autoplay: 1,\n    },\n  },\n}\n\nconst StyledVideoCard = styled(Link)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n`\n\nconst StyledPlayButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  padding: 0.5em 0.6em;\n  line-height: 0;\n`\n\nconst StyledPlayIcon = styled(PlayIcon)`\n  width: 1em;\n  fill: ${COLOR.BACKGROUND_LIGHT};\n  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.1));\n`\n\nconst StyledImg = styled(Img)`\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n`\n\nconst StyledDetails = styled.div`\n  padding: 0.5em 0.5em 0.3em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 4.8em;\n`\n\nconst StyledTimestamp = styled.p`\n  font-size: ${FONT.SIZE.S};\n  margin: 0;\n`\n\nconst StyledMeta = styled.p`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap-reverse;\n  font-size: ${FONT.SIZE.XS};\n  margin: 0;\n  opacity: 0.5;\n`\n\nconst StyledDatePublished = styled.time`\n  margin-right: 0.5em;\n`\n\nconst StyledH = styled(H)`\n  margin: 0;\n`\n\ninterface BookContentsProps {\n  isStars: boolean\n}\n\nconst StyledBookContentsWrapper = styled.div<BookContentsProps>`\n  font-size: ${({ isStars }): string =>\n    isStars ? FONT.SIZE.XXS : FONT.SIZE.XS};\n  margin: ${({ isStars }): number => (isStars ? 0.4 : 0.2)}em 0;\n  opacity: 0.75;\n`\n\ninterface Props {\n  video: VideoCardType\n  featured?: boolean\n  timestamp?: string\n  big?: boolean\n  playsInline?: boolean\n  hideOwnedByRating?: boolean\n  className?: string\n}\n\nconst VideoCard: React.FC<Props> = ({\n  video,\n  featured,\n  timestamp,\n  big,\n  playsInline,\n  hideOwnedByRating,\n  className,\n}) => {\n  const [playVideo, setPlayVideo] = useState(false)\n  const featuredBookCount =\n    (video.timestamps || []).filter((t) => t.book && t.book.id).length +\n    (video.ownedBy ? 1 : 0)\n\n  return (\n    <StyledVideoCard\n      to={timestamp ? `${video.slug}?at=${timestamp}` : video.slug}\n      style={\n        {\n          background: featured && video.image.colors.lightVibrant,\n          color: featured && video.image.colors.darkMuted,\n          '--primary-color': video.image.colors.vibrant,\n        } as object\n      }\n      className={className}\n    >\n      <AspectRatioWrapper style={{ backgroundColor: video.image.colors.muted }}>\n        {playVideo ? (\n          <YouTubePlayer\n            url={`https://www.youtube.com/watch?v=${\n              video.youtubeId\n            }${timestamp && `&t=${unformatTimestamp(timestamp)}`}`}\n            config={YouTubePlayerConfig}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        ) : (\n          <div>\n            {playsInline && (\n              <StyledPlayButton\n                onClick={(e): void => {\n                  e.preventDefault()\n                  setPlayVideo(true)\n                }}\n              >\n                <StyledPlayIcon />\n              </StyledPlayButton>\n            )}\n            <StyledImg\n              fluid={\n                big\n                  ? [\n                      {\n                        ...video.image.childImageSharp.w200,\n                        media: `(max-width: ${BREAKPOINT.M - 1}px)`,\n                      },\n                      {\n                        ...video.image.childImageSharp.w350,\n                        media: `(min-width: ${BREAKPOINT.M}px)`,\n                      },\n                    ]\n                  : video.image.childImageSharp.w200\n              }\n            />\n          </div>\n        )}\n      </AspectRatioWrapper>\n      <StyledDetails>\n        <div>\n          {timestamp && (\n            <StyledTimestamp>Featured at {timestamp} in</StyledTimestamp>\n          )}\n          <StyledH as=\"h2\" size=\"S\">\n            {video.title}\n          </StyledH>\n\n          <StyledBookContentsWrapper isStars={!!video.ownedBy}>\n            {video.ownedBy && !hideOwnedByRating\n              ? video.ownedBy.rating7 && (\n                  <StarRating of7={video.ownedBy.rating7} />\n                )\n              : !timestamp &&\n                featuredBookCount > 1 && (\n                  <>\n                    Featuring {featuredBookCount} book\n                    {featuredBookCount > 1 && 's'}\n                  </>\n                )}\n          </StyledBookContentsWrapper>\n        </div>\n        <StyledMeta>\n          <StyledDatePublished>\n            {shortFormatDate(video.datePublished)}\n          </StyledDatePublished>\n          {video.viewCount >\n            parseInt(process.env.GATSBY_YOUTUBE_VIEWS_MINIMUM_VISIBLE) && (\n            <span>{formatViewCount(video.viewCount)}</span>\n          )}\n        </StyledMeta>\n      </StyledDetails>\n    </StyledVideoCard>\n  )\n}\n\nexport default VideoCard\n"],"sourceRoot":""}