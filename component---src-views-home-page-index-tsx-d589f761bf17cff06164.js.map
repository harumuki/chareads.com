{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/routes/index.ts","webpack:///./src/routes/paths.ts","webpack:///./src/views/HomePage/index.tsx","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["$export","$entries","S","entries","it","PAGES","404","PATH","VIEW","HOME","VIDEO","VIDEOS","BOOK","BOOKS","PATHS","Object","forEach","PAGE","query","HomePage","data","bookData","videoData","books","normalizeArray","videos","Layout","to","length","map","video","key","id","slug","title","book","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","i","result","call","push"],"mappings":"gFACA,IAAIA,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,QAAS,SAAiBC,GACxB,OAAOH,EAASG,O,0FC4BLC,G,wCA3BU,CACvBC,IAAK,CACHC,KAAM,OACNC,KAAM,gBAERC,KAAM,CACJF,KAAM,IACNC,KAAM,YAERE,MAAO,CACLH,KAAM,SACNC,KAAM,aAERG,OAAQ,CACNJ,KAAM,UACNC,KAAM,iBAERI,KAAM,CACJL,KAAM,QACNC,KAAM,YAERK,MAAO,CACLN,KAAM,SACNC,KAAM,kBCxBJM,EAAmB,GAEzBC,OAAOZ,QAAQE,GAAOW,SAAQ,YAAsB,IAApBC,EAAoB,KAAZV,EAAY,KAAZA,KACtCO,EAAMG,GAAQV,KAGDO,Q,YCZf,sCAwBA,IAmCaI,EAAQ,aAsBNC,UAzDmB,SAAC,GAAsC,QAApCC,KAAQC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,UAC/CC,EAAQC,YAAeH,GACvBI,EAASD,YAAeF,GAE9B,OACE,kBAACI,EAAA,EAAD,KACE,4BACE,kBAAC,IAAD,CAAMC,GAAIb,EAAMH,QAAhB,WAEDc,EAAOG,QACN,4BACGH,EAAOI,KAAI,SAACC,GAAD,OACV,wBAAIC,IAAKD,EAAME,IACb,kBAAC,IAAD,CAAML,GAAIG,EAAMG,MAAOH,EAAMI,YAMrC,4BACE,kBAAC,IAAD,CAAMP,GAAIb,EAAMD,OAAhB,UAEDU,EAAMK,QACL,4BACGL,EAAMM,KAAI,SAACM,GAAD,OACT,wBAAIJ,IAAKI,EAAKH,IACZ,kBAAC,IAAD,CAAML,GAAIQ,EAAKF,MAAOE,EAAKD,e,qBClDzC,IAAIE,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUvC,GAOf,IANA,IAKI2B,EALAa,EAAIN,EAAUlC,GACdyC,EAAOR,EAAQO,GACfhB,EAASiB,EAAKjB,OACdkB,EAAI,EACJC,EAAS,GAENnB,EAASkB,GACdf,EAAMc,EAAKC,KACNV,IAAeG,EAAOS,KAAKJ,EAAGb,IACjCgB,EAAOE,KAAKN,EAAY,CAACZ,EAAKa,EAAEb,IAAQa,EAAEb,IAG9C,OAAOgB","file":"component---src-views-home-page-index-tsx-d589f761bf17cff06164.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","type PagesType = {\n  [key: string]: {\n    PATH: string\n    VIEW: string\n  }\n}\n\nconst PAGES: PagesType = {\n  404: {\n    PATH: '/404',\n    VIEW: 'NotFoundPage',\n  },\n  HOME: {\n    PATH: '/',\n    VIEW: 'HomePage',\n  },\n  VIDEO: {\n    PATH: '/video',\n    VIEW: 'VideoPage',\n  },\n  VIDEOS: {\n    PATH: '/videos',\n    VIEW: 'VideoListPage',\n  },\n  BOOK: {\n    PATH: '/book',\n    VIEW: 'BookPage',\n  },\n  BOOKS: {\n    PATH: '/books',\n    VIEW: 'BookListPage',\n  },\n}\n\nexport default PAGES\n","import PAGES from '.'\n\ntype PathsType = {\n  [key: string]: string\n}\n\nconst PATHS: PathsType = {}\n\nObject.entries(PAGES).forEach(([PAGE, { PATH }]) => {\n  PATHS[PAGE] = PATH\n})\n\nexport default PATHS\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport PATHS from 'routes/paths'\nimport Layout from 'Layout'\nimport { RawBookCard, BookCard } from 'types/book/card'\nimport { RawVideoCard, VideoCard } from 'types/video/card'\n\ninterface Props {\n  data: {\n    bookData: {\n      edges: {\n        node: RawBookCard\n      }[]\n    }\n    videoData: {\n      edges: {\n        node: RawVideoCard\n      }[]\n    }\n  }\n}\n\nconst HomePage: React.FC<Props> = ({ data: { bookData, videoData } }) => {\n  const books = normalizeArray(bookData) as BookCard[]\n  const videos = normalizeArray(videoData) as VideoCard[]\n\n  return (\n    <Layout>\n      <h2>\n        <Link to={PATHS.VIDEOS}>Videos</Link>\n      </h2>\n      {videos.length && (\n        <ol>\n          {videos.map((video) => (\n            <li key={video.id}>\n              <Link to={video.slug}>{video.title}</Link>\n            </li>\n          ))}\n        </ol>\n      )}\n\n      <h2>\n        <Link to={PATHS.BOOKS}>Books</Link>\n      </h2>\n      {books.length && (\n        <ol>\n          {books.map((book) => (\n            <li key={book.id}>\n              <Link to={book.slug}>{book.title}</Link>\n            </li>\n          ))}\n        </ol>\n      )}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query HomePage {\n    bookData: allMarkdownRemark(\n      sort: { fields: frontmatter___dateReviewed }\n      limit: 5\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n    videoData: allVideos(sort: { fields: datePublished }, limit: 5) {\n      edges {\n        node {\n          ...VideoCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default HomePage\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}