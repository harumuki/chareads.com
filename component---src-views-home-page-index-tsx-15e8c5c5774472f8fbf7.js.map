{"version":3,"sources":["webpack:///./src/components/YouTubeSubscribeButton/index.tsx","webpack:///./src/views/HomePage/Hero.tsx","webpack:///./src/views/HomePage/SectionLink.tsx","webpack:///./src/views/HomePage/index.tsx"],"names":["YouTubeWidget","src","className","data-channel","data-layout","data-count","StyledTitle","styled","Wrapper","screenMin","m","StyledCoverWrapper","figure","StyledQuoteWrapper","TEXT_SHADOW","StyledQuote","H","StyledBookLink","Link","StyledCover","Img","StyledHeart","span","HomeHero","cover","fluid","childImageSharp","backgroundColor","to","as","size","decorative","StyledLinkCard","FONT","WEIGHT","BOLD","SectionLink","children","ArrowIcon","StyledMainWrapper","div","COLOR","BACKGROUND","StyledIntroGrid","Grid","l","StyledSubscribeWrapper","GridItem","StyledBookGrid","screen","StyledLinkWrapper","query","HomePage","data","bookData","location","books","normalizeArray","Layout","navOpenOnDesktop","navInverted","Hero","spanFromL","columnsFromL","YouTubeSubscribeButton","spanFromM","length","map","book","key","id","BookCard","featured","rating7","PATHS","BOOKS","VIDEOS"],"mappings":"gPAkBeA,EAfiB,kBAC9B,oCACE,kBAAC,IAAD,KACE,4BAAQC,IAAI,4CAGd,yBACEC,UAAU,gBACVC,eAAa,cACbC,cAAY,OACZC,aAAW,c,6RCFjB,IAEMC,EAAcC,YAAOC,KAAV,oEAAGD,CAAH,uDAObE,IAAUC,EAPG,MAYXC,EAAqBJ,IAAOK,OAAV,2EAAGL,CAAH,mHAalBM,EAAqBN,YAAOC,KAAV,2EAAGD,CAAH,8CAGPO,IAEbL,IAAUC,EALU,MAUlBK,EAAcR,YAAOS,KAAV,oEAAGT,CAAH,2GAWXU,EAAiBV,YAAOW,KAAV,uEAAGX,CAAH,uXAwBdY,EAAcZ,YAAOa,KAAV,oEAAGb,CAAH,0HAYXc,EAAcd,IAAOe,KAAV,oEAAGf,CAAH,oBAiCFgB,EAzBmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChC,kBAACb,EAAD,KACE,kBAACQ,EAAD,CACEM,MAAOD,EAAME,gBAAgBD,MAC7BE,gBAAgB,YAGlB,kBAACrB,EAAD,KACE,kBAAC,IAAD,CAAMsB,GAAG,KAAT,aAGF,kBAACf,EAAD,KACE,kBAACE,EAAD,CAAac,GAAG,aAAaC,KAAK,KAAKC,YAAU,GAAjD,yEAGA,+BACE,kBAACV,EAAD,UADF,iBAEE,kBAAC,IAAD,CAAMO,GA7Gc,0CA6GpB,wBAIJ,kBAACX,EAAD,CAAgBW,GAjHQ,6C,YCJtBI,EAAiBzB,YAAOW,KAAV,8EAAGX,CAAH,qBACH0B,IAAKC,OAAOC,MAmBdC,EAXsB,SAAC,GAAqB,IAAnBR,EAAmB,EAAnBA,GAAIS,EAAe,EAAfA,SAC1C,OACE,6BACE,kBAACL,EAAD,CAAgBJ,GAAIA,GACjBS,EACD,kBAACC,EAAA,EAAD,S,gbCAR,IAAMC,EAAoBhC,IAAOiC,IAAV,iFAAGjC,CAAH,iDACPkC,IAAMC,YAKhBC,EAAkBpC,YAAOqC,KAAV,+EAAGrC,CAAH,8CAKfE,IAAUoC,EALK,MAYfC,EAAyBvC,YAAOwC,KAAV,sFAAGxC,CAAH,QACxBE,IAAUoC,EADc,MAOtBG,EAAiBzC,YAAOqC,KAAV,8EAAGrC,CAAH,QAChB0C,IAAOvC,EADS,MAQdwC,EAAoB3C,YAAOC,KAAV,iFAAGD,CAAH,yBA+DV4C,EAAQ,YAuBNC,UArEmB,SAAC,GAA4C,QAA1CC,KAAQC,EAAkC,EAAlCA,SAAU9B,EAAwB,EAAxBA,MAAS+B,EAAe,EAAfA,SACxDC,EAAQC,YAAeH,GAE7B,OACE,kBAACI,EAAA,EAAD,CAAQH,SAAUA,EAAUI,kBAAgB,EAACC,aAAW,GACtD,kBAACC,EAAD,CAAMrC,MAAOA,IAEb,kBAACe,EAAD,KACE,kBAACI,EAAD,KACE,kBAACG,EAAD,CAAwBgB,UAAW,EAAGC,aAAa,UACjD,kBAACC,EAAD,OAGF,kBAACjB,EAAA,EAAD,CAAUzB,KAAM,EAAG2C,UAAW,GAAIH,UAAW,GAC3C,2MAQJ,kBAACd,EAAD,CAAgBnB,GAAG,MAChB2B,EAAMU,QACLV,EAAMW,KAAI,SAACC,GAAD,OACR,kBAACrB,EAAA,EAAD,CACElB,GAAG,KACHwC,IAAKD,EAAKE,GACVhD,KAAM,EACN2C,UAAW,EACXH,UAAW,GAEX,kBAACS,EAAA,EAAD,CAAUH,KAAMA,EAAMI,SAAUJ,EAAKK,SAAW,SAKxD,kBAACvB,EAAD,KACE,kBAAC,EAAD,CAAatB,GAAI8C,IAAMC,OAAvB,0BACA,kBAAC,EAAD,CAAa/C,GAAI8C,IAAME,QAAvB","file":"component---src-views-home-page-index-tsx-15e8c5c5774472f8fbf7.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst YouTubeWidget: React.FC = () => (\n  <>\n    <Helmet>\n      <script src=\"https://apis.google.com/js/platform.js\"></script>\n    </Helmet>\n\n    <div\n      className=\"g-ytsubscribe\"\n      data-channel=\"chareadzard\"\n      data-layout=\"full\"\n      data-count=\"default\"\n    ></div>\n  </>\n)\n\nexport default YouTubeWidget\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nimport { GatsbyImageSharpFluid } from 'types/image'\nimport H from 'components/H'\nimport Wrapper from 'components/Wrapper'\nimport { screenMin } from 'styles/responsive'\nimport { TEXT_SHADOW } from 'styles/tokens'\n\nconst SECRET_HISTORY_LINK = '/books/the-secret-history-donna-tartt/'\n\nconst StyledTitle = styled(Wrapper)`\n  color: #fff;\n  & {\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n\n  ${screenMin.m`\n    opacity: 0;\n  `}\n`\n\nconst StyledCoverWrapper = styled.figure`\n  margin: 0;\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  perspective: 50vmax;\n\n  > * {\n    position: relative;\n  }\n`\n\nconst StyledQuoteWrapper = styled(Wrapper)`\n  z-index: 20;\n  color: #fff;\n  text-shadow: ${TEXT_SHADOW};\n\n  ${screenMin.m`\n    margin-top: 5vh;\n  `}\n`\n\nconst StyledQuote = styled(H)`\n  max-width: 5.5em;\n  margin: 0 0 0.25em;\n  font-size: 3em;\n  text-indent: -0.25em;\n\n  &:before {\n    content: ${`\"\\\\201C\"`};\n  }\n`\n\nconst StyledBookLink = styled(Link)`\n  position: absolute;\n  z-index: 10;\n  width: 19vh;\n  height: 31vh;\n  bottom: 8vh;\n  left: 50%;\n  margin-left: -7vh;\n  transform: rotate3d(2, -1, 1.5, -30deg);\n  transform-origin: 50% 100%;\n  border-top-left-radius: 30% 5%;\n  border-top-right-radius: 50% 10%;\n  border-bottom-left-radius: 5%;\n  border-bottom-right-radius: 5%;\n\n  @media (min-aspect-ratio: 4008/3002) {\n    width: 15vw;\n    height: 22vw;\n    bottom: 8vh;\n    left: 50%;\n    margin-left: -6vw;\n  }\n`\n\nconst StyledCover = styled(Img)`\n  position: absolute !important;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  user-select: none;\n\n  img {\n    object-position: 50% 100% !important;\n  }\n`\n\nconst StyledHeart = styled.span`\n  color: #ff006a;\n`\n\ninterface Props {\n  cover: GatsbyImageSharpFluid\n}\n\nconst HomeHero: React.FC<Props> = ({ cover }) => (\n  <StyledCoverWrapper>\n    <StyledCover\n      fluid={cover.childImageSharp.fluid}\n      backgroundColor=\"#434d73\"\n    />\n\n    <StyledTitle>\n      <Link to=\"/\">Chareads</Link>\n    </StyledTitle>\n\n    <StyledQuoteWrapper>\n      <StyledQuote as=\"blockquote\" size=\"XL\" decorative>\n        It is better to know one book intimately than a hundred superficially\n      </StyledQuote>\n      <small>\n        <StyledHeart>&#10084;</StyledHeart> Donna Tartt, {}\n        <Link to={SECRET_HISTORY_LINK}>The Secret History</Link>\n      </small>\n    </StyledQuoteWrapper>\n\n    <StyledBookLink to={SECRET_HISTORY_LINK} />\n  </StyledCoverWrapper>\n)\n\nexport default HomeHero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport { FONT } from 'styles/tokens'\nimport ArrowIcon from 'components/icons/ArrowIcon'\n\nconst StyledLinkCard = styled(Link)`\n  font-weight: ${FONT.WEIGHT.BOLD};\n`\n\ninterface Props {\n  to: string\n  children: React.ReactNode\n}\n\nconst SectionLink: React.FC<Props> = ({ to, children }) => {\n  return (\n    <div>\n      <StyledLinkCard to={to}>\n        {children}\n        <ArrowIcon />\n      </StyledLinkCard>\n    </div>\n  )\n}\n\nexport default SectionLink\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport PATHS from 'routes/paths'\nimport Layout from 'Layout'\nimport { PageProps } from 'types/page'\nimport { BookCardType } from 'types/book'\nimport { GatsbyImageSharpFluid } from 'types/image'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport BookCard from 'components/cards/BookCard'\nimport Wrapper from 'components/Wrapper'\nimport YouTubeSubscribeButton from 'components/YouTubeSubscribeButton'\nimport { screen, screenMin } from 'styles/responsive'\nimport { COLOR } from 'styles/tokens'\n\nimport Hero from './Hero'\nimport SectionLink from './SectionLink'\n\nconst StyledMainWrapper = styled.div`\n  background: ${COLOR.BACKGROUND};\n  position: relative;\n  z-index: 90;\n`\n\nconst StyledIntroGrid = styled(Grid)`\n  && {\n    padding-top: 2em;\n    margin-bottom: 2em;\n\n    ${screenMin.l`\n      padding-top: 3em;\n      margin-bottom: 3em;\n    `}\n  }\n`\n\nconst StyledSubscribeWrapper = styled(GridItem)`\n  ${screenMin.l`\n    align-self: end;\n    text-align: right;\n  `}\n`\n\nconst StyledBookGrid = styled(Grid)`\n  ${screen.m`\n    > *:nth-child(14) {\n      display: none;\n    }\n  `}\n`\n\nconst StyledLinkWrapper = styled(Wrapper)`\n  && {\n    margin-top: 2em;\n  }\n`\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: BookCardType\n      }[]\n    }\n    cover: GatsbyImageSharpFluid\n  }\n}\n\nconst HomePage: React.FC<Props> = ({ data: { bookData, cover }, location }) => {\n  const books = normalizeArray(bookData) as BookCardType[]\n\n  return (\n    <Layout location={location} navOpenOnDesktop navInverted>\n      <Hero cover={cover} />\n\n      <StyledMainWrapper>\n        <StyledIntroGrid>\n          <StyledSubscribeWrapper spanFromL={4} columnsFromL=\"9 / 13\">\n            <YouTubeSubscribeButton />\n          </StyledSubscribeWrapper>\n\n          <GridItem span={2} spanFromM={12} spanFromL={8}>\n            <p>\n              Hello, I&rsquo;m Charlotte and I love to read anything and\n              everything. Chareads is where I record and review every book I\n              read. Have&nbsp;a&nbsp;poke around and find your next favourite.\n            </p>\n          </GridItem>\n        </StyledIntroGrid>\n\n        <StyledBookGrid as=\"ol\">\n          {books.length &&\n            books.map((book) => (\n              <GridItem\n                as=\"li\"\n                key={book.id}\n                span={1}\n                spanFromM={4}\n                spanFromL={2}\n              >\n                <BookCard book={book} featured={book.rating7 >= 6} />\n              </GridItem>\n            ))}\n        </StyledBookGrid>\n\n        <StyledLinkWrapper>\n          <SectionLink to={PATHS.BOOKS}>Find more book reviews</SectionLink>\n          <SectionLink to={PATHS.VIDEOS}>See all my bookish videos</SectionLink>\n        </StyledLinkWrapper>\n      </StyledMainWrapper>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query HomePage {\n    cover: file(relativePath: { eq: \"cover.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 2000) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    bookData: allBook(\n      sort: { fields: dateRated, order: DESC }\n      filter: { rating7: { ne: null } }\n      limit: 12\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default HomePage\n"],"sourceRoot":""}