{"version":3,"sources":["webpack:///./src/components/cards/BookCard/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.big.js","webpack:///./src/utils/hooks/useScrollPosition.ts","webpack:///./src/components/InfiniteScroll/index.tsx","webpack:///./src/views/BookListPage/index.tsx"],"names":["StyledBookCard","styled","Link","hasVideo","COLOR","BACKGROUND_DARK","BORDER_RADIUS","S","StyledImg","Img","background","StyledStarRating","div","StyledVideoLink","FONT","SIZE","XS","WEIGHT","BOLD","BookCard","book","big","to","slug","video","style","image","colors","lightMuted","color","darkVibrant","vibrant","title","author","key","childImageSharp","fluid","src","muted","of7","rating7","fields","createHTML","this","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","isBrowser","useScrollPosition","effect","wait","deps","element","throttleTimeout","callback","current","document","body","getBoundingClientRect","bottom","innerHeight","getScrollPosition","handleScroll","setTimeout","addEventListener","removeEventListener","InfiniteScroll","items","renderItem","anchorRef","createRef","useState","itemsToShow","setItemsToShow","pos","length","slice","map","ref","StyledWarningBox","query","BookListPage","bookData","data","location","books","normalizeArray","as","size","decorative","filter","b","id","span","spanFromM","spanFromL","spanRows"],"mappings":"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","file":"component---src-views-book-list-page-index-tsx-61b7d71ed29ae8a7af82.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { BookCardType } from 'types/book/card'\nimport StarRating from 'components/StarRating'\nimport { FONT, COLOR, BORDER_RADIUS } from 'styles/tokens'\n\ninterface BookCardProps {\n  hasVideo: boolean\n}\n\nconst StyledBookCard = styled(Link)<BookCardProps>`\n  display: block;\n  margin: 0;\n  height: 100%;\n  padding: 10% 20%\n    calc(10% + ${({ hasVideo }): number => (hasVideo ? 2.5 : 1)}em);\n  position: relative;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n`\n\ninterface StyledImgProps {\n  background: string\n}\n\nconst StyledImg = styled(Img)<StyledImgProps>`\n  background: ${({ background }): string => background};\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1), 0 0 0.3em rgba(0, 0, 0, 0.05);\n  top: 50%;\n  transform: translate(0, -50%);\n`\n\nconst StyledStarRating = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0.75em;\n  width: 100%;\n  text-align: center;\n  line-height: 1;\n`\n\nconst StyledVideoLink = styled(Link)`\n  font-size: ${FONT.SIZE.XS};\n  font-weight: ${FONT.WEIGHT.BOLD};\n  padding: 0.25em 0.5em;\n`\n\ninterface Props {\n  book: BookCardType\n  big?: boolean\n}\n\nconst BookCard: React.FC<Props> = ({ book, big }) => {\n  return (\n    <StyledBookCard\n      to={book.slug}\n      hasVideo={!!book.video}\n      style={\n        {\n          background: big && book.image.colors.lightMuted,\n          color: book.image.colors.darkVibrant,\n          '--primary-color': book.image.colors.vibrant,\n        } as object\n      }\n      title={`${book.title} by ${book.author}`}\n    >\n      <StyledImg\n        key={book.image.childImageSharp.fluid.src}\n        fluid={book.image.childImageSharp.fluid}\n        background={book.image.colors.muted}\n      />\n      <StyledStarRating>\n        <StarRating of7={book.rating7} />\n        {book.video && (\n          <StyledVideoLink to={book.video.fields.slug}>\n            Video review &rarr;\n          </StyledVideoLink>\n        )}\n      </StyledStarRating>\n    </StyledBookCard>\n  )\n}\n\nexport default BookCard\n","'use strict';\n// B.2.3.3 String.prototype.big()\nrequire('./_string-html')('big', function (createHTML) {\n  return function big() {\n    return createHTML(this, 'big', '', '');\n  };\n});\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\nconst isBrowser = typeof window !== `undefined`\n\nconst getScrollPosition = (\n  element: React.RefObject<React.ReactNode>\n): number => {\n  if (!isBrowser) return 0\n\n  const target = element.current || document.body\n  return target.getBoundingClientRect().bottom - window.innerHeight\n}\n\nconst useScrollPosition = (\n  effect: (pos: number) => void,\n  wait: number,\n  deps: any[], // eslint-disable-line\n  element?: React.RefObject<React.ReactNode>\n): void => {\n  let throttleTimeout = null\n\n  const callback = (): void => {\n    effect(getScrollPosition(element))\n    throttleTimeout = null\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return\n    }\n\n    const handleScroll = (): void => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callback, wait)\n        }\n      } else {\n        callback()\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return (): void => window.removeEventListener('scroll', handleScroll)\n  }, deps || [])\n}\n\nexport default useScrollPosition\n","import React, { useState, createRef } from 'react'\n\nimport useScrollPosition from 'utils/hooks/useScrollPosition'\n\nconst SCROLL_BUFFER = 300\nconst INITIAL_COUNT = 16\nconst INCREMENT = 8\n\nconst isBrowser = typeof window !== `undefined`\n\ninterface Props {\n  items: object[]\n  renderItem: (item: object) => React.ReactNode\n}\n\nconst InfiniteScroll: React.FC<Props> = ({ items, renderItem }) => {\n  const anchorRef = createRef()\n  const [itemsToShow, setItemsToShow] = useState(INITIAL_COUNT)\n\n  useScrollPosition(\n    (pos) => {\n      if (pos < 400 && itemsToShow < items.length)\n        setItemsToShow(itemsToShow + INCREMENT)\n    },\n    SCROLL_BUFFER,\n    [itemsToShow],\n    anchorRef\n  )\n\n  return (\n    <>\n      {items.slice(0, isBrowser ? itemsToShow : items.length).map(renderItem)}\n      <span ref={anchorRef as React.LegacyRef<HTMLSpanElement>} />\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { PageProps } from 'types/page'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { RawBookCard, BookCardType } from 'types/book/card'\nimport { FONT, BORDER_RADIUS } from 'styles/tokens'\nimport BookCard from 'components/cards/BookCard'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport H from 'components/H'\nimport TextIntro from 'components/Wrapper/TextIntro'\nimport InfiniteScroll from 'components/InfiniteScroll'\n\nconst StyledWarningBox = styled.div`\n  padding: 1em;\n  max-width: 530px;\n  font-size: ${FONT.SIZE.S};\n  border-radius: ${BORDER_RADIUS.S};\n  background: #f1ecda;\n`\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: RawBookCard\n      }[]\n    }\n  }\n}\n\nconst BookListPage: React.FC<Props> = ({ data: { bookData }, location }) => {\n  const books = normalizeArray(bookData) as BookCardType[]\n\n  return (\n    <Layout location={location}>\n      <TextIntro>\n        <H as=\"h1\" size=\"XXL\" decorative>\n          Book reviews\n        </H>\n        <p>\n          {books.length} books rated, with {}\n          {books.filter((b) => b.video).length} dedicated video reviews\n        </p>\n        <StyledWarningBox>\n          This page is still in development, come back in a few weeks to browse\n          by author, tag, and more!\n        </StyledWarningBox>\n      </TextIntro>\n\n      <Grid as=\"ol\">\n        <InfiniteScroll\n          items={books}\n          renderItem={(book: BookCardType): React.ReactNode => {\n            const big = book.rating7 >= 6\n            return (\n              <GridItem\n                as=\"li\"\n                key={book.id}\n                span={big ? 2 : 1}\n                spanFromM={big ? 8 : 4}\n                spanFromL={big ? 6 : 3}\n                spanRows={big ? 2 : 1}\n              >\n                <BookCard book={book} big={big} />\n              </GridItem>\n            )\n          }}\n        />\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BookListPage {\n    bookData: allMarkdownRemark(\n      sort: { fields: frontmatter___dateRated, order: DESC }\n      filter: { frontmatter: { rating7: { ne: null } } }\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default BookListPage\n"],"sourceRoot":""}