{"version":3,"sources":["webpack:///./src/components/YouTubeSubscribeButton/index.tsx","webpack:///./src/views/HomePage/Hero.tsx","webpack:///./src/views/HomePage/SectionLink.tsx","webpack:///./src/views/HomePage/index.tsx","webpack:///./src/components/icons/PlayIcon.tsx","webpack:///./src/components/cards/VideoCard/index.tsx"],"names":["YouTubeWidget","src","className","data-channel","data-layout","data-count","StyledTitle","styled","Wrapper","screenMin","m","StyledCoverWrapper","figure","StyledQuoteWrapper","TEXT_SHADOW","StyledQuote","H","StyledBookLink","Link","StyledCover","Img","StyledHeart","span","HomeHero","cover","fluid","childImageSharp","to","as","size","decorative","StyledLinkCard","FONT","WEIGHT","BOLD","SectionLink","children","ArrowIcon","StyledMainWrapper","div","COLOR","BACKGROUND","StyledIntroGrid","Grid","l","StyledSubscribeWrapper","GridItem","StyledMediaGrid","screen","StyledVideoCard","VideoCard","StyledBookCard","BookCard","StyledLinkWrapper","query","HomePage","data","bookData","videoData","location","books","normalizeArray","videos","Layout","navOpenOnDesktop","navInverted","Hero","spanFromL","columnsFromL","YouTubeSubscribeButton","spanFromM","length","map","video","i","key","id","style","order","big","book","featured","rating7","PATHS","BOOKS","VIDEOS","PlayIcon","viewBox","d","YouTubePlayerConfig","youtube","playerVars","rel","controls","autoplay","BACKGROUND_DARK","BORDER_RADIUS","S","StyledPlayButton","button","StyledPlayIcon","BACKGROUND_LIGHT","StyledDuration","aside","$big","SIZE","XS","XXS","StyledImg","StyledDetails","StyledTimestamp","p","StyledMeta","StyledDatePublished","time","StyledH","StyledBookContentsWrapper","isStars","timestamp","playsInline","hideOwnedByRating","useState","playVideo","setPlayVideo","featuredBookCount","timestamps","filter","t","ownedBy","slug","background","image","colors","lightVibrant","color","darkMuted","vibrant","AspectRatioWrapper","backgroundColor","muted","url","youtubeId","unformatTimestamp","config","width","height","onClick","e","preventDefault","w200","media","BREAKPOINT","M","w350","aria-label","formatTimestamp","duration","title","StarRating","of7","shortFormatDate","datePublished","viewCount","parseInt","process","formatViewCount"],"mappings":"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","file":"component---src-views-home-page-index-tsx-682ccbf2b3b010fd8d8d.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst YouTubeWidget: React.FC = () => (\n  <>\n    <Helmet>\n      <script src=\"https://apis.google.com/js/platform.js\"></script>\n    </Helmet>\n\n    <div\n      className=\"g-ytsubscribe\"\n      data-channel=\"chareadzard\"\n      data-layout=\"full\"\n      data-count=\"default\"\n    ></div>\n  </>\n)\n\nexport default YouTubeWidget\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nimport { GatsbyImageSharpFluid } from 'types/image'\nimport H from 'components/H'\nimport Wrapper from 'components/Wrapper'\nimport { screenMin } from 'styles/responsive'\nimport { TEXT_SHADOW } from 'styles/tokens'\n\nconst SECRET_HISTORY_LINK = '/books/the-secret-history-donna-tartt/'\n\nconst StyledTitle = styled(Wrapper)`\n  color: #fff;\n  & {\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n\n  ${screenMin.m`\n    opacity: 0;\n  `}\n`\n\nconst StyledCoverWrapper = styled.figure`\n  margin: 0;\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  perspective: 50vmax;\n\n  > * {\n    position: relative;\n  }\n`\n\nconst StyledQuoteWrapper = styled(Wrapper)`\n  z-index: 20;\n  color: #fff;\n  text-shadow: ${TEXT_SHADOW};\n\n  ${screenMin.m`\n    margin-top: 5vh;\n  `}\n`\n\nconst StyledQuote = styled(H)`\n  max-width: 5.5em;\n  margin: 0 0 0.25em;\n  font-size: 3em;\n  text-indent: -0.25em;\n\n  &:before {\n    content: ${`\"\\\\201C\"`};\n  }\n`\n\nconst StyledBookLink = styled(Link)`\n  position: absolute;\n  z-index: 10;\n  width: 19vh;\n  height: 31vh;\n  bottom: 8vh;\n  left: 50%;\n  margin-left: -7vh;\n  transform: rotate3d(2, -1, 1.5, -30deg);\n  transform-origin: 50% 100%;\n  border-top-left-radius: 30% 5%;\n  border-top-right-radius: 50% 10%;\n  border-bottom-left-radius: 5%;\n  border-bottom-right-radius: 5%;\n\n  @media (min-aspect-ratio: 4008/3002) {\n    width: 15vw;\n    height: 22vw;\n    bottom: 8vh;\n    left: 50%;\n    margin-left: -6vw;\n  }\n`\n\nconst StyledCover = styled(Img)`\n  position: absolute !important;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  user-select: none;\n  background: #50597a;\n\n  img {\n    object-position: 50% 100% !important;\n  }\n\n  > img {\n    opacity: 1 !important;\n  }\n\n  img + picture img {\n    transition: opacity 2000ms ease 0s !important;\n  }\n`\n\nconst StyledHeart = styled.span`\n  color: #ff006a;\n`\n\ninterface Props {\n  cover: GatsbyImageSharpFluid\n}\n\nconst HomeHero: React.FC<Props> = ({ cover }) => (\n  <StyledCoverWrapper>\n    <StyledCover fluid={cover.childImageSharp.fluid} />\n\n    <StyledTitle>\n      <Link to=\"/\">Chareads</Link>\n    </StyledTitle>\n\n    <StyledQuoteWrapper>\n      <StyledQuote as=\"blockquote\" size=\"XL\" decorative>\n        It is better to know one book intimately than a hundred superficially\n      </StyledQuote>\n      <small>\n        <StyledHeart>&#10084;</StyledHeart> Donna Tartt, {}\n        <Link to={SECRET_HISTORY_LINK}>The Secret History</Link>\n      </small>\n    </StyledQuoteWrapper>\n\n    <StyledBookLink to={SECRET_HISTORY_LINK} />\n  </StyledCoverWrapper>\n)\n\nexport default HomeHero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport { FONT } from 'styles/tokens'\nimport ArrowIcon from 'components/icons/ArrowIcon'\n\nconst StyledLinkCard = styled(Link)`\n  font-weight: ${FONT.WEIGHT.BOLD};\n`\n\ninterface Props {\n  to: string\n  children: React.ReactNode\n}\n\nconst SectionLink: React.FC<Props> = ({ to, children }) => {\n  return (\n    <div>\n      <StyledLinkCard to={to}>\n        {children}\n        <ArrowIcon />\n      </StyledLinkCard>\n    </div>\n  )\n}\n\nexport default SectionLink\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport PATHS from 'routes/paths'\nimport Layout from 'Layout'\nimport { PageProps } from 'types/page'\nimport { BookCardType } from 'types/book'\nimport { VideoCardType } from 'types/video'\nimport { GatsbyImageSharpFluid } from 'types/image'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport BookCard from 'components/cards/BookCard'\nimport VideoCard from 'components/cards/VideoCard'\nimport Wrapper from 'components/Wrapper'\nimport YouTubeSubscribeButton from 'components/YouTubeSubscribeButton'\nimport { screen, screenMin } from 'styles/responsive'\nimport { COLOR, FONT } from 'styles/tokens'\n\nimport Hero from './Hero'\nimport SectionLink from './SectionLink'\n\nconst StyledMainWrapper = styled.div`\n  background: ${COLOR.BACKGROUND};\n  position: relative;\n  z-index: 90;\n`\n\nconst StyledIntroGrid = styled(Grid)`\n  && {\n    padding-top: 2em;\n    margin-bottom: 2em;\n\n    ${screenMin.l`\n      padding-top: 3em;\n      margin-bottom: 3em;\n    `}\n  }\n`\n\nconst StyledSubscribeWrapper = styled(GridItem)`\n  ${screenMin.l`\n    align-self: end;\n    text-align: right;\n  `}\n`\n\nconst StyledMediaGrid = styled(Grid)`\n  ${screen.m`\n    > *:nth-last-child(-n+2) {\n      display: none;\n    }\n  `}\n`\n\nconst StyledVideoCard = styled(VideoCard)`\n  > div:last-child {\n    min-height: auto;\n  }\n`\n\nconst StyledBookCard = styled(BookCard)`\n  font-size: 0.875em;\n`\n\nconst StyledLinkWrapper = styled(Wrapper)`\n  && {\n    margin-top: 2em;\n  }\n`\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: BookCardType\n      }[]\n    }\n    videoData: {\n      edges: {\n        node: VideoCardType\n      }[]\n    }\n    cover: GatsbyImageSharpFluid\n  }\n}\n\nconst HomePage: React.FC<Props> = ({\n  data: { bookData, videoData, cover },\n  location,\n}) => {\n  const books = normalizeArray(bookData) as BookCardType[]\n  const videos = normalizeArray(videoData) as VideoCardType[]\n\n  return (\n    <Layout location={location} navOpenOnDesktop navInverted>\n      <Hero cover={cover} />\n\n      <StyledMainWrapper>\n        <StyledIntroGrid>\n          <StyledSubscribeWrapper spanFromL={4} columnsFromL=\"9 / 13\">\n            <YouTubeSubscribeButton />\n          </StyledSubscribeWrapper>\n\n          <GridItem span={2} spanFromM={12} spanFromL={8}>\n            <p>\n              Hello, I&rsquo;m Charlotte and I love to read anything and\n              everything. Chareads is where I record and review every book I\n              read. Have&nbsp;a&nbsp;poke around and find your next favourite.\n            </p>\n          </GridItem>\n        </StyledIntroGrid>\n\n        <StyledMediaGrid as=\"ol\">\n          {videos.length &&\n            videos.map((video, i) => (\n              <GridItem\n                as=\"li\"\n                key={video.id}\n                span={2}\n                spanFromM={6}\n                spanFromL={4}\n                style={{ order: 2 + i * 2 }}\n              >\n                <StyledVideoCard video={video} big />\n              </GridItem>\n            ))}\n          {books.length &&\n            books.map((book, i) => (\n              <GridItem\n                as=\"li\"\n                key={book.id}\n                span={1}\n                spanFromM={3}\n                spanFromL={2}\n                style={{ order: i }}\n              >\n                <StyledBookCard book={book} featured={book.rating7 >= 6} />\n              </GridItem>\n            ))}\n        </StyledMediaGrid>\n\n        <StyledLinkWrapper>\n          <SectionLink to={PATHS.BOOKS}>Find more book reviews</SectionLink>\n          <SectionLink to={PATHS.VIDEOS}>See all my bookish videos</SectionLink>\n        </StyledLinkWrapper>\n      </StyledMainWrapper>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query HomePage {\n    cover: file(relativePath: { eq: \"cover.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 2000, traceSVG: { color: \"#363c54\", turdSize: 20 }) {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n    bookData: allBook(\n      sort: { fields: dateRated, order: DESC }\n      filter: { rating7: { ne: null } }\n      limit: 10\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n    videoData: allVideo(\n      sort: { fields: datePublished, order: DESC }\n      filter: { ownedBy: { id: { eq: null } } }\n      limit: 4\n    ) {\n      edges {\n        node {\n          ...VideoCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default HomePage\n","import React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nconst PlayIcon: React.FC<Props> = ({ className }) => (\n  <svg viewBox=\"0 0 11 14\" className={className}>\n    <path d=\"M9.2,6.2l-7.5-5c-0.5-0.3-1.2,0-1.2,0.6v10.3c0,0.6,0.7,1,1.2,0.6l7.5-5C9.8,7.4,9.8,6.6,9.2,6.2z\" />\n  </svg>\n)\n\nexport default PlayIcon\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport YouTubePlayer from 'react-player/lib/players/YouTube'\n\nimport { VideoCardType } from 'types/video'\nimport { shortFormatDate, unformatTimestamp, formatTimestamp } from 'utils/formatting/time'\nimport { formatViewCount } from 'utils/formatting/numbers'\nimport H from 'components/H'\nimport { COLOR, FONT, BORDER_RADIUS, BREAKPOINT } from 'styles/tokens'\nimport StarRating from 'components/StarRating'\nimport AspectRatioWrapper from 'components/AspectRatioWrapper'\nimport PlayIcon from 'components/icons/PlayIcon'\n\nconst YouTubePlayerConfig = {\n  youtube: {\n    playerVars: {\n      rel: 0,\n      controls: 1,\n      autoplay: 1,\n    },\n  },\n}\n\nconst StyledVideoCard = styled(Link)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n`\n\nconst StyledPlayButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  padding: 0.5em 0.6em;\n  line-height: 0;\n`\n\nconst StyledPlayIcon = styled(PlayIcon)`\n  width: 1em;\n  fill: ${COLOR.BACKGROUND_LIGHT};\n  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.1));\n`\n\nconst StyledDuration = styled.aside`\n  position: absolute;\n  bottom: 0.25em;\n  right: 0.25em;\n  padding: 0 0.375em;\n  border-radius: 2px;\n  background: #00000088;\n  color: #ffffffcc;\n  font-size: ${({ $big }) => $big ? FONT.SIZE.XS : FONT.SIZE.XXS};\n`\n\nconst StyledImg = styled(Img)`\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n`\n\nconst StyledDetails = styled.div`\n  padding: 0.5em 0.5em 0.3em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 4.8em;\n`\n\nconst StyledTimestamp = styled.p`\n  font-size: ${FONT.SIZE.S};\n  margin: 0;\n`\n\nconst StyledMeta = styled.p`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap-reverse;\n  font-size: ${FONT.SIZE.XS};\n  margin: 0;\n  opacity: 0.5;\n`\n\nconst StyledDatePublished = styled.time`\n  margin-right: 0.5em;\n`\n\nconst StyledH = styled(H)`\n  margin: 0;\n`\n\ninterface BookContentsProps {\n  isStars: boolean\n}\n\nconst StyledBookContentsWrapper = styled.div<BookContentsProps>`\n  font-size: ${({ isStars }): string =>\n    isStars ? FONT.SIZE.XXS : FONT.SIZE.XS};\n  margin: ${({ isStars }): number => (isStars ? 0.4 : 0.2)}em 0;\n  opacity: 0.75;\n`\n\ninterface Props {\n  video: VideoCardType\n  featured?: boolean\n  timestamp?: string\n  big?: boolean\n  playsInline?: boolean\n  hideOwnedByRating?: boolean\n  className?: string\n}\n\nconst VideoCard: React.FC<Props> = ({\n  video,\n  featured,\n  timestamp,\n  big,\n  playsInline,\n  hideOwnedByRating,\n  className,\n}) => {\n  const [playVideo, setPlayVideo] = useState(false)\n  const featuredBookCount =\n    (video.timestamps || []).filter((t) => t.book && t.book.id).length +\n    (video.ownedBy ? 1 : 0)\n\n  return (\n    <StyledVideoCard\n      to={timestamp ? `${video.slug}?at=${timestamp}` : video.slug}\n      style={\n        {\n          background: featured && video.image.colors.lightVibrant,\n          color: featured && video.image.colors.darkMuted,\n          '--primary-color': video.image.colors.vibrant,\n        } as object\n      }\n      className={className}\n    >\n      <AspectRatioWrapper style={{ backgroundColor: video.image.colors.muted }}>\n        {playVideo ? (\n          <YouTubePlayer\n            url={`https://www.youtube.com/watch?v=${\n              video.youtubeId\n            }${timestamp && `&t=${unformatTimestamp(timestamp)}`}`}\n            config={YouTubePlayerConfig}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        ) : (\n          <div>\n            {playsInline && (\n              <StyledPlayButton\n                onClick={(e): void => {\n                  e.preventDefault()\n                  setPlayVideo(true)\n                }}\n              >\n                <StyledPlayIcon />\n              </StyledPlayButton>\n            )}\n            <StyledImg\n              fluid={\n                big\n                  ? [\n                      {\n                        ...video.image.childImageSharp.w200,\n                        media: `(max-width: ${BREAKPOINT.M - 1}px)`,\n                      },\n                      {\n                        ...video.image.childImageSharp.w350,\n                        media: `(min-width: ${BREAKPOINT.M}px)`,\n                      },\n                    ]\n                  : video.image.childImageSharp.w200\n              }\n            />\n            <StyledDuration $big={big} aria-label=\"duration\">{formatTimestamp(video.duration)}</StyledDuration>\n          </div>\n        )}\n      </AspectRatioWrapper>\n      <StyledDetails>\n        <div>\n          {timestamp && (\n            <StyledTimestamp>Featured at {timestamp} in</StyledTimestamp>\n          )}\n          <StyledH as=\"h2\" size=\"S\">\n            {video.title}\n          </StyledH>\n\n          <StyledBookContentsWrapper isStars={!!video.ownedBy}>\n            {video.ownedBy && !hideOwnedByRating\n              ? video.ownedBy.rating7 && (\n                  <StarRating of7={video.ownedBy.rating7} />\n                )\n              : !timestamp &&\n                featuredBookCount > 1 && (\n                  <>\n                    Featuring {featuredBookCount} book\n                    {featuredBookCount > 1 && 's'}\n                  </>\n                )}\n          </StyledBookContentsWrapper>\n        </div>\n        <StyledMeta>\n          <StyledDatePublished>\n            {shortFormatDate(video.datePublished)}\n          </StyledDatePublished>\n          {video.viewCount >\n            parseInt(process.env.GATSBY_YOUTUBE_VIEWS_MINIMUM_VISIBLE) && (\n            <span>{formatViewCount(video.viewCount)}</span>\n          )}\n        </StyledMeta>\n      </StyledDetails>\n    </StyledVideoCard>\n  )\n}\n\nexport default VideoCard\n"],"sourceRoot":""}