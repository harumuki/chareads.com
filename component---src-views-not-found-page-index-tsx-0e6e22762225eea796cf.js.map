{"version":3,"sources":["webpack:///./src/views/NotFoundPage/index.tsx"],"names":["StyledBook","styled","GridItem","FONT","SIZE","S","query","NotFoundPage","bookData","data","location","books","normalizeArray","navOpenOnDesktop","navTitle","title","size","decorative","href","style","marginTop","map","book","key","id","span","spanFromM","spanFromL","spanRowsFromM","as"],"mappings":"2FAAA,kLAeMA,EAAaC,YAAOC,KAAV,+EAAGD,CAAH,mCAEDE,IAAKC,KAAKC,GAmDZC,EAAQ,YAgBNC,UAtDuB,SAAC,GAAqC,IAA3BC,EAA2B,EAAnCC,KAAQD,SAAYE,EAAe,EAAfA,SACrDC,EAAQC,YAAeJ,GAE7B,OACE,kBAAC,IAAD,CAAQE,SAAUA,EAAUG,kBAAgB,EAACC,SAAS,MAAMC,MAAM,OAChE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAGC,KAAK,MAAMC,YAAU,GAAxB,kBAGA,sFAEE,uBAAGC,KAAK,sCAAR,mBAFF,4BAMF,kBAAC,IAAD,CAAMC,MAAO,CAAEC,UAAW,QACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAGJ,KAAK,KAAR,wCAEDL,EAAMU,KACL,SAACC,GAAD,OACE,kBAACtB,EAAD,CACEuB,IAAKD,EAAKE,GACVC,KAAM,EACNC,UAAW,EACXC,UAAW,EACXC,cAAe,EACfC,GAAG,MAEH,kBAAC,IAAD,CAAUP,KAAMA","file":"component---src-views-not-found-page-index-tsx-0e6e22762225eea796cf.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { PageProps } from 'types/page'\nimport { BookCardType } from 'types/book'\nimport Layout from 'Layout'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Wrapper from 'components/Wrapper'\nimport H from 'components/H'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport BookCard from 'components/cards/BookCard'\nimport { FONT } from 'styles/tokens'\n\nconst StyledBook = styled(GridItem)`\n  list-style: none;\n  font-size: ${FONT.SIZE.S};\n`\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: BookCardType\n      }[]\n    }\n  }\n}\n\nconst NotFoundPage: React.FC<Props> = ({ data: { bookData }, location }) => {\n  const books = normalizeArray(bookData) as BookCardType[]\n\n  return (\n    <Layout location={location} navOpenOnDesktop navTitle=\"404\" title=\"404\">\n      <Wrapper>\n        <H size=\"XXL\" decorative>\n          Page not found\n        </H>\n        <p>\n          Do you think this page is supposed to be here? Tweet me {}\n          <a href=\"https://twitter.com/charlotte_dann\">@charlotte_dann</a> and\n          I&rsquo;ll look into it.\n        </p>\n      </Wrapper>\n      <Grid style={{ marginTop: '2em' }}>\n        <GridItem>\n          <H size=\"M\">Check out some recent book reviews:</H>\n        </GridItem>\n        {books.map(\n          (book: BookCardType): React.ReactNode => (\n            <StyledBook\n              key={book.id}\n              span={1}\n              spanFromM={3}\n              spanFromL={2}\n              spanRowsFromM={1}\n              as=\"li\"\n            >\n              <BookCard book={book} />\n            </StyledBook>\n          )\n        )}\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query NotFoundPage {\n    bookData: allBook(\n      limit: 12\n      filter: { dateReviewed: { ne: null } }\n      sort: { fields: dateReviewed, order: DESC }\n    ) {\n      edges {\n        node {\n          ...BookCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default NotFoundPage\n"],"sourceRoot":""}